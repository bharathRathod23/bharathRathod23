Set Up Your Local Project

1) Initialize Git:
Run the following command to initialize a new Git repository in your project directory:
git init


2). Connect the Local Repository to GitHub
Add the Remote Repository:
Copy the URL of your GitHub repository (either HTTPS or SSH). Then, add it as a remote repository:

git remote add origin https://github.com/your-username/your-repository.git

3) Add, Commit, and Push Your Files
Add Your Files:
Add all your project files to the staging area:
git add .


4) Commit Your Changes:
Commit the files with a meaningful message:
git commit -m "Initial commit"

5) Push to GitHub:
Push your committed files to the remote repository:
git push -u origin main


6.) Confirm Everything is Set Up
Check the GitHub Repository:
Go to your GitHub repository page and verify that your files have been uploaded.




Additional Tips
.gitignore:
Create a .gitignore file to specify files and directories that should not be tracked by Git. This is useful for excluding sensitive information, build artifacts, and dependencies.

# Example .gitignore
node_modules/
.env



Branching:
To create and switch to a new branch for feature development:

git checkout -b new-feature-branch



Cloning an Existing Repository:
If you want to clone an existing GitHub repository to your local machine, use:
git clone https://github.com/username/repository.git




















Verify Git Remote URL: Ensure that your Git remote URL is configured to use the SSH protocol and not HTTPS. You can check this with:

git remote -v

If the remote URL starts with https://github.com/..., you need to update it to use SSH:

git remote set-url origin git@github.com:<username>/<repository>.git


example: git remote set-url origin git@github.com:bharathRathod23/BvrH2Project.git
